//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace projectXWebApp.remoteService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="projectXAsmxSoap", Namespace="http://tempuri.org/")]
    public partial class projectXAsmx : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllQeustionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public projectXAsmx() {
            this.Url = global::projectXWebApp.Properties.Settings.Default.projectXWebApp_remoteService_projectXAsmx;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertQuestionCompletedEventHandler InsertQuestionCompleted;
        
        /// <remarks/>
        public event UpdateQuestionCompletedEventHandler UpdateQuestionCompleted;
        
        /// <remarks/>
        public event GetQuestionCompletedEventHandler GetQuestionCompleted;
        
        /// <remarks/>
        public event GetAllQeustionsCompletedEventHandler GetAllQeustionsCompleted;
        
        /// <remarks/>
        public event InsertUserCompletedEventHandler InsertUserCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event GetAllUsersIDsCompletedEventHandler GetAllUsersIDsCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertQuestion(string Question, string Answer, string Diagram, string TimeInSeconds, string Points, string Category) {
            object[] results = this.Invoke("InsertQuestion", new object[] {
                        Question,
                        Answer,
                        Diagram,
                        TimeInSeconds,
                        Points,
                        Category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertQuestionAsync(string Question, string Answer, string Diagram, string TimeInSeconds, string Points, string Category) {
            this.InsertQuestionAsync(Question, Answer, Diagram, TimeInSeconds, Points, Category, null);
        }
        
        /// <remarks/>
        public void InsertQuestionAsync(string Question, string Answer, string Diagram, string TimeInSeconds, string Points, string Category, object userState) {
            if ((this.InsertQuestionOperationCompleted == null)) {
                this.InsertQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertQuestionOperationCompleted);
            }
            this.InvokeAsync("InsertQuestion", new object[] {
                        Question,
                        Answer,
                        Diagram,
                        TimeInSeconds,
                        Points,
                        Category}, this.InsertQuestionOperationCompleted, userState);
        }
        
        private void OnInsertQuestionOperationCompleted(object arg) {
            if ((this.InsertQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertQuestionCompleted(this, new InsertQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateQuestion(string QuestionID, string Question, string Answer, string Diagram, string TimeInSeconds, string Points, string Category) {
            object[] results = this.Invoke("UpdateQuestion", new object[] {
                        QuestionID,
                        Question,
                        Answer,
                        Diagram,
                        TimeInSeconds,
                        Points,
                        Category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQuestionAsync(string QuestionID, string Question, string Answer, string Diagram, string TimeInSeconds, string Points, string Category) {
            this.UpdateQuestionAsync(QuestionID, Question, Answer, Diagram, TimeInSeconds, Points, Category, null);
        }
        
        /// <remarks/>
        public void UpdateQuestionAsync(string QuestionID, string Question, string Answer, string Diagram, string TimeInSeconds, string Points, string Category, object userState) {
            if ((this.UpdateQuestionOperationCompleted == null)) {
                this.UpdateQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQuestionOperationCompleted);
            }
            this.InvokeAsync("UpdateQuestion", new object[] {
                        QuestionID,
                        Question,
                        Answer,
                        Diagram,
                        TimeInSeconds,
                        Points,
                        Category}, this.UpdateQuestionOperationCompleted, userState);
        }
        
        private void OnUpdateQuestionOperationCompleted(object arg) {
            if ((this.UpdateQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQuestionCompleted(this, new UpdateQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetQuestion(string QuestionID) {
            object[] results = this.Invoke("GetQuestion", new object[] {
                        QuestionID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQuestionAsync(string QuestionID) {
            this.GetQuestionAsync(QuestionID, null);
        }
        
        /// <remarks/>
        public void GetQuestionAsync(string QuestionID, object userState) {
            if ((this.GetQuestionOperationCompleted == null)) {
                this.GetQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuestionOperationCompleted);
            }
            this.InvokeAsync("GetQuestion", new object[] {
                        QuestionID}, this.GetQuestionOperationCompleted, userState);
        }
        
        private void OnGetQuestionOperationCompleted(object arg) {
            if ((this.GetQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuestionCompleted(this, new GetQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllQeustions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAllQeustions() {
            object[] results = this.Invoke("GetAllQeustions", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllQeustionsAsync() {
            this.GetAllQeustionsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllQeustionsAsync(object userState) {
            if ((this.GetAllQeustionsOperationCompleted == null)) {
                this.GetAllQeustionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllQeustionsOperationCompleted);
            }
            this.InvokeAsync("GetAllQeustions", new object[0], this.GetAllQeustionsOperationCompleted, userState);
        }
        
        private void OnGetAllQeustionsOperationCompleted(object arg) {
            if ((this.GetAllQeustionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllQeustionsCompleted(this, new GetAllQeustionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertUser(string UserName, string Password, string FirstName, string LastName, string Email, string PhoneNumber, string WeekDaysScore, string WeekendScore, string TotalScore) {
            object[] results = this.Invoke("InsertUser", new object[] {
                        UserName,
                        Password,
                        FirstName,
                        LastName,
                        Email,
                        PhoneNumber,
                        WeekDaysScore,
                        WeekendScore,
                        TotalScore});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUserAsync(string UserName, string Password, string FirstName, string LastName, string Email, string PhoneNumber, string WeekDaysScore, string WeekendScore, string TotalScore) {
            this.InsertUserAsync(UserName, Password, FirstName, LastName, Email, PhoneNumber, WeekDaysScore, WeekendScore, TotalScore, null);
        }
        
        /// <remarks/>
        public void InsertUserAsync(string UserName, string Password, string FirstName, string LastName, string Email, string PhoneNumber, string WeekDaysScore, string WeekendScore, string TotalScore, object userState) {
            if ((this.InsertUserOperationCompleted == null)) {
                this.InsertUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUserOperationCompleted);
            }
            this.InvokeAsync("InsertUser", new object[] {
                        UserName,
                        Password,
                        FirstName,
                        LastName,
                        Email,
                        PhoneNumber,
                        WeekDaysScore,
                        WeekendScore,
                        TotalScore}, this.InsertUserOperationCompleted, userState);
        }
        
        private void OnInsertUserOperationCompleted(object arg) {
            if ((this.InsertUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUserCompleted(this, new InsertUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUser(string UserID, string UserName, string Password, string FirstName, string LastName, string Email, string PhoneNumber, string WeekDaysScore, string WeekendScore, string TotalScore) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        UserID,
                        UserName,
                        Password,
                        FirstName,
                        LastName,
                        Email,
                        PhoneNumber,
                        WeekDaysScore,
                        WeekendScore,
                        TotalScore});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string UserID, string UserName, string Password, string FirstName, string LastName, string Email, string PhoneNumber, string WeekDaysScore, string WeekendScore, string TotalScore) {
            this.UpdateUserAsync(UserID, UserName, Password, FirstName, LastName, Email, PhoneNumber, WeekDaysScore, WeekendScore, TotalScore, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string UserID, string UserName, string Password, string FirstName, string LastName, string Email, string PhoneNumber, string WeekDaysScore, string WeekendScore, string TotalScore, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        UserID,
                        UserName,
                        Password,
                        FirstName,
                        LastName,
                        Email,
                        PhoneNumber,
                        WeekDaysScore,
                        WeekendScore,
                        TotalScore}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUsersIDs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAllUsersIDs() {
            object[] results = this.Invoke("GetAllUsersIDs", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersIDsAsync() {
            this.GetAllUsersIDsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUsersIDsAsync(object userState) {
            if ((this.GetAllUsersIDsOperationCompleted == null)) {
                this.GetAllUsersIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersIDsOperationCompleted);
            }
            this.InvokeAsync("GetAllUsersIDs", new object[0], this.GetAllUsersIDsOperationCompleted, userState);
        }
        
        private void OnGetAllUsersIDsOperationCompleted(object arg) {
            if ((this.GetAllUsersIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersIDsCompleted(this, new GetAllUsersIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetUser(string UserID) {
            object[] results = this.Invoke("GetUser", new object[] {
                        UserID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(string UserID) {
            this.GetUserAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(string UserID, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        UserID}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Login(string userName, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        userName,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string password) {
            this.LoginAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        userName,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertQuestionCompletedEventHandler(object sender, InsertQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateQuestionCompletedEventHandler(object sender, UpdateQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetQuestionCompletedEventHandler(object sender, GetQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllQeustionsCompletedEventHandler(object sender, GetAllQeustionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllQeustionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllQeustionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertUserCompletedEventHandler(object sender, InsertUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllUsersIDsCompletedEventHandler(object sender, GetAllUsersIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591